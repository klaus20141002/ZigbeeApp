<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd  
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd  
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

	<context:annotation-config />
	
	<context:component-scan base-package="com.zigbee" />
	
	<!-- Connection Pool -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://45.63.124.106:3306/mxagriculture"/>
        <property name="username" value="root"/>
        <property name="password" value="root"/>
    </bean>

	<!-- 类工厂由spring管理 -->
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="persistenceUnitName" value="dos3_common_test" />
		<property name="persistenceXmlLocation" value="classpath:jpa_persistence.xml" />
	</bean>

	<!-- 事务由spring管理 -->
	<bean id="txManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<tx:annotation-driven transaction-manager="txManager" />

	<!-- Exception translation bean post processor -->
	<bean
		class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />

	<bean id="jpaTemplate" class="org.springframework.orm.jpa.JpaTemplate">
    	<property name="entityManagerFactory" ref="entityManagerFactory"></property>
    </bean>
    
	<!-- Bean definition: using in JUnit, uncomment it when doing Unit testing -->
      
	<bean id="logger" class="org.slf4j.LoggerFactory" factory-method="getLogger">
    	<constructor-arg type="java.lang.String" value="rollingFile"></constructor-arg>
    </bean>
	
    
    <!-- Application Message Bundle -->
	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basenames">
		<list>
			<value>classpath:messages</value>
			<value>classpath:errors</value>
		</list>
		</property>
		<property name="defaultEncoding" value="UTF-8"/>
	</bean>
     
    <!-- Saves a locale change using a cookie -->
	<bean id="localeResolver"
		class="org.springframework.web.servlet.i18n.CookieLocaleResolver" />
		
		
	 <!-- 定时任务 -->
	<bean id="timerFactory" class="org.springframework.scheduling.timer.TimerFactoryBean">
	   <property name="scheduledTimerTasks">
	    <list>
	     <ref bean="springTimerTask" />
	    </list>
	   </property>
	</bean>
	
	<bean id="springTimerTask" class="org.springframework.scheduling.timer.ScheduledTimerTask">
	   <property name="timerTask">
	    <ref bean="switchOnoffOnScheduleTask" />
	   </property>
	   <!-- wait 10 seconds before starting repeated execution -->
	   <property name="delay">
	    <value>1000000</value>
	   </property>
	   <!-- run every 50 seconds-->
	   <property name="period">
	    <value>3000000</value> 
	   </property>
	</bean>

	

	<!-- aop:aspectj-autoproxy proxy-target-class="true"/ -->
	<!-- <aop:aspectj-autoproxy> -->
	<!-- only the following aspect class will use spring AOP -->
	<!-- <aop:include name="sampleAopAspect" /> -->
	<!-- </aop:aspectj-autoproxy> -->

	<!-- this switches on the load-time weaving: AspectJ Load-time Weaving (LTW) 
		<context:load-time-weaver /> -->
		
	<bean id="restTemplate" class="org.springframework.web.client.RestTemplate">
		<property name="messageConverters">
			<list>
				<ref bean="stringHttpMessageConverter" />				
				<!-- Don't change its order -->
				<bean id="messageConverter"
					class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
				</bean>
				<ref bean="xmlmessageConverter" />
			</list>
		</property>
	</bean>

	<bean id="xmlmessageConverter"
		class="org.springframework.http.converter.xml.MarshallingHttpMessageConverter">
		<property name="marshaller" ref="xstreamMarshaller" />
		<property name="unmarshaller" ref="xstreamMarshaller" />
	</bean>

	<bean id="stringHttpMessageConverter"
		class="org.springframework.http.converter.StringHttpMessageConverter" />
	<bean id="xstreamMarshaller" class="org.springframework.oxm.xstream.XStreamMarshaller">
	</bean>
</beans> 